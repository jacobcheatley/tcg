@import 'imports/colors.scss';
@import 'imports/fonts.scss';
@import 'imports/mixins.scss';

// Card Dimensions
$card-width: 63mm;
$card-height: 88mm;
$card-border-color: $color-black;

// Standard measures
$card-small-pad: 0.5mm;

$card-border-radius: 2mm;
$card-frame-inset: 1.25mm;

$card-main-box-inset-top: 1mm;
$card-main-box-inset-right: 1.5mm;
$card-main-box-inset-bottom: 4mm;
$card-main-box-inset-left: 1.5mm;
$card-main-box-border-radius: 2mm;

$font-size-tags: 2.5mm;
$font-size-text: 3.5mm;
$font-size-name: 4mm;
$font-size-cost: 6mm;
$font-size-power: 6mm;

$main-box-outer-shadow: 0 0 0.5mm 0.25mm $color-black;
$text-inner-shadow: inset 0 0 1mm $color-black;

// Derived
$card-main-box-width: ($card-width - $card-frame-inset * 2 - $card-main-box-inset-left - $card-main-box-inset-right);
$card-main-box-height: ($card-height - $card-frame-inset * 2 - $card-main-box-inset-top - $card-main-box-inset-bottom);

$top-box-height: $font-size-name + $font-size-tags + $card-small-pad * 2;
$art-box-height: ($card-main-box-width * 3 / 4);
$text-box-height: $card-main-box-height - $top-box-height - $art-box-height;


.card {
    width: $card-width;
    height: $card-height;
    border-radius: $card-border-radius;
    background-color: $card-border-color;
    box-sizing: border-box;
    position: relative;
    font-family: $font-default;
}


.card-frame {
    position: absolute;
    left: $card-frame-inset;
    right: $card-frame-inset;
    top: $card-frame-inset;
    bottom: $card-frame-inset;
}

.card-frame-texture-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    $gradient-bleed: 2%;
    @for $n-colors from 2 through 5 {
        $fraction-per: 100 / $n-colors;
        @for $nth-color-element from 2 through $n-colors {
            $nth-to-last: ($n-colors - $nth-color-element + 1);
            $start-percent: 100% - $fraction-per * ($nth-color-element - 1) - $gradient-bleed;
            $end-percent: 100% - $fraction-per * ($nth-color-element - 1) + $gradient-bleed;
            // @debug "n-colors #{$n-colors}";
            // @debug "fraction-per: #{$fraction-per}";
            // @debug "nth-color-element: #{$nth-color-element}";
            // @debug "nth-to-last: #{$nth-to-last}";
            // @debug "start-percent: #{$start-percent}";
            // @debug "end-percent: #{$end-percent}";
            // @debug "-";

            // https://stackoverflow.com/a/12198561
            .card-frame-texture:nth-child(#{$nth-color-element}):nth-last-child(#{$nth-to-last}) {
                -webkit-mask-image: linear-gradient(to left, white $start-percent, transparent $end-percent);
            }
        }
    }
}

.card-frame-texture {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-size: 100%;
    border-radius: $card-frame-inset;
}

.mana {
    display: inline-block;
    border-radius: 50%;
    text-align: center;
    color: $color-mana-value;
    width: 1em;
    height: 1em;
    aspect-ratio: 1 / 1;
    font-style: normal !important;
    font-weight: bold;
    border: 0.1em solid $color-mana-value;
    box-sizing: border-box;
}

.mana-value {
    vertical-align: top;
    line-height: 1em;
    font-size: 0.95em;
    font-family: $font-display;
}

.cost-box .mana, .channel-box .mana {
    font-size: $font-size-cost;
}


.main-box {
    position: absolute;
    margin-top: $card-main-box-inset-top;
    margin-left: $card-main-box-inset-left;
    margin-right: $card-main-box-inset-right;
    margin-bottom: $card-main-box-inset-bottom;
    width: $card-main-box-width;
    height: $card-main-box-height;
    border-radius: $card-main-box-border-radius;
    background-color: $color-text-background;
    box-sizing: border-box;
    background-clip: padding-box;
    box-shadow: $main-box-outer-shadow;

    &>* {
        width: 100%;
    }
}

.top-box {
    border-radius: $card-main-box-border-radius $card-main-box-border-radius 0 0;
    display: flex;
    flex-direction: row;
    padding: $card-small-pad 0;
    box-shadow: $text-inner-shadow;
    height: $top-box-height;
    box-sizing: border-box;
    overflow: hidden;
}

.cost-box {
    font-size: $font-size-cost;
    margin: 0 $card-small-pad;
}

.title-box {
    padding-left: $card-small-pad;
}

.name-box {
    font-size: $font-size-name;
    font-family: $font-display;
    font-weight: bold;
    height: 1em;
}

.tag-box {
    font-size: $font-size-tags;
    font-family: $font-display;
    font-weight: bold;
    height: 1em;
}

.art-box {
    height: $art-box-height;
    box-sizing: border-box;
    margin: auto;
    background-color: white;
    position: relative;
    overflow: hidden;
}

.art {
    width: 100%;
}

.type-box {
    font-size: $font-size-text;
    position: absolute;
    text-align: center;
    left: 50%;
    bottom: 0;
    padding: 0 ($card-small-pad * 3);
    border-top-left-radius: 0.5em;
    border-top-right-radius: 0.5em;
    height: 1.1em;
    color: $color-black;
    font-family: $font-display;
    font-weight: bold;
    white-space: nowrap;
    opacity: 0.8;
    overflow: visible;
    transform: translate(-50%, 0%);
}

.text-box {
    font-size: $font-size-text;
    border-radius: 0 0 $card-main-box-border-radius $card-main-box-border-radius;
    box-sizing: border-box;
    padding: $card-small-pad * 2;
    height: $text-box-height;
    box-shadow: $text-inner-shadow;
}

.flavor-text {
    display: block;
    bottom: 0;
    margin-top: ($card-small-pad * 3);
    font-style: italic;
}

.power-box {
    color: $color-white;
    background-color: $color-black;
    position: absolute;
    bottom: 0;
    padding: 0 ($card-small-pad * 3);
    height: 1em;
    font-size: $font-size-power;
    border-top-right-radius: 50%;
    font-family: $font-display;

    &:empty {
        display: none;
    }

    @include stroke();
}

.channel-box {
    transform: rotate(180deg) translate(50%, 0%);
    position: absolute;
    bottom: 0;
    left: 50%;
}

// Other elements
.keyword-display {
    font-weight: bold;
}

.keyword-reminder {
    font-style: italic;
}

.ability-trigger {
    background-image: linear-gradient(to bottom, transparent, transparent 30%, $color-ability-trigger 85%, transparent 85%);
    font-weight: 500;

    &::after {
        content: ":";
    }
}
.ability-activation-cost {
    background-image: linear-gradient(to bottom, transparent, transparent 30%, $color-ability-activation-cost 85%, transparent 85%);
    font-weight: 500;

    &::after {
        // content: "►";
        // content: "→";
        content: " ⇒";
    }
}

br {
    // margin-bottom: 0.2em;
    display: block;
    content: "";
    margin-top: 0.3em;
}

li {
    margin-left: 0.3em;
    &::before {
        content: "- ";
    }
}